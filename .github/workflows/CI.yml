name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main!]

env:
  BUILD_TYPE: Debug

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-11]
        mpi: [MPICH, OpenMPI]
        exclude:
          - os: macos-11
            mpi: OpenMPI

    # The CMake configure and build commands are platform agnostic and
    # should work equally well on Windows or Mac. You can convert this
    # to a matrix build if you need cross-platform coverage. See:
    # https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v2

    - name: Install ${{matrix.mpi}}
      run: |
        case $(uname) in
        Darwin)
            case "${{matrix.mpi}}" in
                MPICH) packages=mpich;;
                OpenMPI) packages=open-mpi;;
            esac
            brew install ${packages}
            ;;
        Linux)
            case "${{matrix.mpi}}" in
                MPICH) packages=libmpich-dev;;
                OpenMPI) packages=libopenmpi-dev;;
            esac
            sudo apt-get install ${packages}
            ;;
        esac

    - name: Configure
      run: |
        if [ ${{matrix.os}} = Darwin -a ${{matrix.mpi}} = MPICH ]; then
            cmake -B ${{github.workspace}}/build \
                -DCMAKE_CXX_COMPILER=g++ \
                -DCMAKE_Fortran_COMPILER=gfortran \
                -DMPI_CXX_ADDITIONAL_INCLUDE_DIRS=/usr/local/include \
                -DMPI_CXX_LIB_NAMES='mpicxx;mpi;pmpi' \
                -DMPI_mpi_LIBRARY='-L/usr/local/lib;-lmpi' \
                -DMPI_mpicxx_LIBRARY='-L/usr/local/lib;-lmpicxx' \
                -DMPI_pmpi_LIBRARY='-L/usr/local/lib;-lpmpi' \
                -DMPI_Fortran_ADDITIONAL_INCLUDE_DIRS=/usr/local/include \
                -DMPI_Fortran_LIB_NAMES=mpifort \
                -DMPI_mpifort_LIBRARY='-L/usr/local/lib;-lmpifort;-lmpi;-lpmpi' \
                -DMPIEXEC_EXECUTABLE=/usr/local/bin/mpiexec \
                -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
                -DCMAKE_INSTALL_PREFIX=$HOME/mpiwrapper-${{matrix.mpi}}
        else
            cmake -B ${{github.workspace}}/build \
                -DCMAKE_CXX_COMPILER=mpicxx \
                -DCMAKE_Fortran_COMPILER=mpif90 \
                -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
                -DCMAKE_INSTALL_PREFIX=$HOME/mpiwrapper-${{matrix.mpi}}
        fi

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Install
      run: cmake --install ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
