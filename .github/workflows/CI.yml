name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main!]

env:
  BUILD_TYPE: Debug

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-11]
        mpi: [MPICH, OpenMPI]
        exclude:
          - os: macos-11
            mpi: OpenMPI

    # The CMake configure and build commands are platform agnostic and
    # should work equally well on Windows or Mac. You can convert this
    # to a matrix build if you need cross-platform coverage. See:
    # https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v2

    - name: Install ${{matrix.mpi}}
      run: |
        case $(uname) in
        Darwin)
            case "${{matrix.mpi}}" in
                MPICH) packages=mpich;;
                OpenMPI) packages=open-mpi;;
            esac
            brew install ${packages}
            # TODO
            ls -l /usr/local/bin
            ls -l /usr/local/include
            ls -l /usr/local/lib
            ;;
        Linux)
            case "${{matrix.mpi}}" in
                MPICH) packages=libmpich-dev;;
                OpenMPI) packages=libopenmpi-dev;;
            esac
            sudo apt-get install ${packages}
            ;;
        esac

    - name: Configure
      run: |
        if [ $(uname) = Darwin -a ${{matrix.mpi}} = MPICH ]; then
            echo 'os=Darwin, mpi=MPICH'
            #TODO: remove libgfortran
            cmake -B ${{github.workspace}}/build \
                -DCMAKE_CXX_COMPILER=g++-11 \
                -DCMAKE_Fortran_COMPILER=gfortran-11 \
                -DMPI_SKIP_GUESSING=TRUE \
                -DMPI_CXX_COMPILER=g++-11 \
                -DMPI_Fortran_COMPILER=gfortran-11 \
                -DMPI_CXX_ADDITIONAL_INCLUDE_DIRS=/usr/local/include \
                -DMPI_CXX_LIB_NAMES='mpicxx;mpi;pmpi' \
                -DMPI_Fortran_ADDITIONAL_INCLUDE_DIRS=/usr/local/include \
                -DMPI_Fortran_LIB_NAMES='mpifort;mpi;pmpi;gfortran' \
                -DMPI_gfortran_LIBRARY=/usr/local/opt/gcc/lib/gcc/11/libgfortran.dylib \
                -DMPI_mpi_LIBRARY=/usr/local/lib/libmpi.dylib \
                -DMPI_mpicxx_LIBRARY=/usr/local/lib/libmpicxx.dylib \
                -DMPI_mpifort_LIBRARY=/usr/local/lib/libmpifort.dylib \
                -DMPI_pmpi_LIBRARY=/usr/local/lib/libpmpi.dylib \
                -DMPIEXEC_EXECUTABLE=/usr/local/bin/mpiexec \
                -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
                -DCMAKE_INSTALL_PREFIX=$HOME/mpiwrapper-${{matrix.mpi}} || true
            echo "/Users/runner/work/MPIwrapper/MPIwrapper/build/CMakeFiles/CMakeOutput.log"
            cat "/Users/runner/work/MPIwrapper/MPIwrapper/build/CMakeFiles/CMakeError.log"
            echo "/Users/runner/work/MPIwrapper/MPIwrapper/build/CMakeFiles/CMakeOutput.log"
            cat "/Users/runner/work/MPIwrapper/MPIwrapper/build/CMakeFiles/CMakeError.log"
            false
        else
            echo 'default'
            cmake -B ${{github.workspace}}/build \
                -DCMAKE_CXX_COMPILER=mpicxx \
                -DCMAKE_Fortran_COMPILER=mpif90 \
                -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
                -DCMAKE_INSTALL_PREFIX=$HOME/mpiwrapper-${{matrix.mpi}}
        fi

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Install
      run: cmake --install ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
